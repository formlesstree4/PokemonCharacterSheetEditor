<UserControl
    x:Class="PtaSheet.Views.AbilityEditor"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:local="clr-namespace:PtaSheet.ViewModels"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/"             
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=local:AbilityEditorViewModel}"
    mc:Ignorable="d"
    prism:ViewModelLocator.AutoWireViewModel="True">
    <UserControl.Resources>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="4" />
            <Setter Property="Padding" Value="4"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="4" />
            <Setter Property="Padding" Value="4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="Margin" Value="4" />
            <Setter Property="Padding" Value="4"/>
            <Style.Triggers>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Background" Value="DarkGray"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <i:Interaction.Triggers>
            <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest, Mode=OneWay}">
                <prism:PopupWindowAction IsModal="True" CenterOverAssociatedObject="True"/>
            </prism:InteractionRequestTrigger>
        </i:Interaction.Triggers>

        <StackPanel
            IsEnabled="{Binding SelectedAbility, Converter={StaticResource nullabilityToBoolean}}"
            Orientation="Vertical">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>

                <TextBlock
                Grid.Column="0"
                HorizontalAlignment="Right"
                Text="Ability: "
                VerticalAlignment="Center" />
                <ComboBox
                DisplayMemberPath="Name"
                Grid.Column="1"
                ItemsSource="{Binding Abilities, UpdateSourceTrigger=PropertyChanged}"
                SelectedItem="{Binding SelectedAbility, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                VerticalAlignment="Center"/>

                <Button
                Command="{Binding AddAbilityCommand}"
                Content="+"
                Grid.Column="2"
                Margin="10"/>

                <Button
                Command="{Binding RemoveAbilityCommand}"
                Content="-"
                Grid.Column="3"
                IsEnabled="{Binding SelectedAbility, Converter={StaticResource nullabilityToBoolean}, UpdateSourceTrigger=PropertyChanged}"
                Margin="10"/>

            </Grid>
            <UniformGrid Columns="4">
                <TextBlock Text="Name:"/>
                <TextBox
                    IsEnabled="{Binding SelectedAbility, Converter={StaticResource nullabilityToBoolean}, UpdateSourceTrigger=PropertyChanged}"
                    Text="{Binding SelectedAbility.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <TextBlock Text="Activation:"/>
                <TextBox
                    IsEnabled="{Binding SelectedAbility, Converter={StaticResource nullabilityToBoolean}, UpdateSourceTrigger=PropertyChanged}"
                    Text="{Binding SelectedAbility.Activation, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <TextBlock Text="Effect:"/>
                <TextBox
                    IsEnabled="{Binding SelectedAbility, Converter={StaticResource nullabilityToBoolean}, UpdateSourceTrigger=PropertyChanged}"
                    Text="{Binding SelectedAbility.Effect, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <TextBlock Text="Limit:"/>
                <TextBox
                    IsEnabled="{Binding SelectedAbility, Converter={StaticResource nullabilityToBoolean}, UpdateSourceTrigger=PropertyChanged}"
                    Text="{Binding Limit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                <TextBlock Text="Keyword:"/>
                <ComboBox
                    DisplayMemberPath="Name"
                    IsEnabled="{Binding SelectedAbility, Converter={StaticResource nullabilityToBoolean}, UpdateSourceTrigger=PropertyChanged}"
                    ItemsSource="{Binding Keywords}"
                    SelectedItem="{Binding SelectedAbility.Keyword}"/>

            </UniformGrid>
        </StackPanel>
    </Grid>
</UserControl>
